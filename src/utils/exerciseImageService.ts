
import { ExerciseMedia } from '@/types/exercise';

class ExerciseImageService {
  private exerciseCache = new Map<string, ExerciseMedia[]>();
  
  // GIFs demonstrativos funcionais de exerc√≠cios
  private readonly EXERCISE_GIFS: Record<string, ExerciseMedia[]> = {
    // Exerc√≠cios de peitoral
    'supino': [
      {
        type: 'gif',
        url: 'https://i.gifer.com/7VsI.gif',
        alt: 'Supino - Demonstra√ß√£o do movimento completo',
        thumbnail: 'https://i.gifer.com/7VsI.gif'
      }
    ],
    'supino reto': [
      {
        type: 'gif',
        url: 'https://i.gifer.com/7VsI.gif',
        alt: 'Supino Reto - Execu√ß√£o com barra, movimento de descida e subida',
        thumbnail: 'https://i.gifer.com/7VsI.gif'
      }
    ],
    'supino inclinado': [
      {
        type: 'gif',
        url: 'https://i.gifer.com/YQq8.gif',
        alt: 'Supino Inclinado - √Çngulo de 45¬∞, movimento controlado',
        thumbnail: 'https://i.gifer.com/YQq8.gif'
      }
    ],
    'flexao': [
      {
        type: 'gif',
        url: 'https://i.gifer.com/7T4r.gif',
        alt: 'Flex√£o - Movimento de descida e subida, corpo alinhado',
        thumbnail: 'https://i.gifer.com/7T4r.gif'
      }
    ],
    'flex√£o': [
      {
        type: 'gif',
        url: 'https://i.gifer.com/7T4r.gif',
        alt: 'Flex√£o de Bra√ßo - Cad√™ncia controlada, 2 segundos para descer',
        thumbnail: 'https://i.gifer.com/7T4r.gif'
      }
    ],
    
    // Exerc√≠cios de costas
    'remada': [
      {
        type: 'gif',
        url: 'https://i.gifer.com/QDg.gif',
        alt: 'Remada - Puxada com cotovelos junto ao corpo, esc√°pulas unidas',
        thumbnail: 'https://i.gifer.com/QDg.gif'
      }
    ],
    'puxada': [
      {
        type: 'gif',
        url: 'https://i.gifer.com/2Zy.gif',
        alt: 'Puxada - Movimento amplo, ativa√ß√£o do lat√≠ssimo do dorso',
        thumbnail: 'https://i.gifer.com/2Zy.gif'
      }
    ],
    
    // Exerc√≠cios de pernas
    'agachamento': [
      {
        type: 'gif',
        url: 'https://i.gifer.com/7VsF.gif',
        alt: 'Agachamento - Descida at√© 90¬∞, joelhos alinhados com os p√©s',
        thumbnail: 'https://i.gifer.com/7VsF.gif'
      }
    ],
    'leg press': [
      {
        type: 'gif',
        url: 'https://i.gifer.com/1JjI.gif',
        alt: 'Leg Press - Movimento completo, p√©s na largura dos ombros',
        thumbnail: 'https://i.gifer.com/1JjI.gif'
      }
    ],
    
    // Exerc√≠cios de ombro
    'desenvolvimento': [
      {
        type: 'gif',
        url: 'https://i.gifer.com/7VsG.gif',
        alt: 'Desenvolvimento - Movimento vertical, ombros estabilizados',
        thumbnail: 'https://i.gifer.com/7VsG.gif'
      }
    ],
    'elevacao lateral': [
      {
        type: 'gif',
        url: 'https://i.gifer.com/2hP.gif',
        alt: 'Eleva√ß√£o Lateral - Movimento controlado at√© a altura dos ombros',
        thumbnail: 'https://i.gifer.com/2hP.gif'
      }
    ],
    'eleva√ß√£o lateral': [
      {
        type: 'gif',
        url: 'https://i.gifer.com/2hP.gif',
        alt: 'Eleva√ß√£o Lateral - Evitar usar o impulso, movimento isolado',
        thumbnail: 'https://i.gifer.com/2hP.gif'
      }
    ],
    
    // Exerc√≠cios de bra√ßo
    'rosca direta': [
      {
        type: 'gif',
        url: 'https://i.gifer.com/7VsH.gif',
        alt: 'Rosca Direta - Flex√£o do b√≠ceps, cotovelos fixos',
        thumbnail: 'https://i.gifer.com/7VsH.gif'
      }
    ],
    'rosca biceps': [
      {
        type: 'gif',
        url: 'https://i.gifer.com/7VsH.gif',
        alt: 'Rosca B√≠ceps - Contra√ß√£o m√°xima no topo do movimento',
        thumbnail: 'https://i.gifer.com/7VsH.gif'
      }
    ],
    'triceps': [
      {
        type: 'gif',
        url: 'https://i.gifer.com/7VsJ.gif',
        alt: 'Tr√≠ceps - Extens√£o completa, movimento controlado',
        thumbnail: 'https://i.gifer.com/7VsJ.gif'
      }
    ]
  };

  // Mapeamento de palavras-chave para GIFs por categoria
  private readonly KEYWORD_MAPPING: Record<string, string> = {
    // Peitoral
    'supino': 'chest',
    'peitoral': 'chest',
    'crucifixo': 'chest',
    'flexao': 'chest',
    'flex√£o': 'chest',
    
    // Costas
    'remada': 'back',
    'puxada': 'back',
    'costas': 'back',
    'pull': 'back',
    'lat': 'back',
    
    // Pernas
    'agachamento': 'legs',
    'leg': 'legs',
    'coxa': 'legs',
    'perna': 'legs',
    'quadriceps': 'legs',
    'gluteo': 'legs',
    'gl√∫teo': 'legs',
    
    // Ombros
    'ombro': 'shoulders',
    'desenvolvimento': 'shoulders',
    'elevacao': 'shoulders',
    'eleva√ß√£o': 'shoulders',
    'deltoid': 'shoulders',
    
    // Bra√ßos
    'rosca': 'arms',
    'triceps': 'arms',
    'tr√≠ceps': 'arms',
    'biceps': 'arms',
    'b√≠ceps': 'arms',
    'braco': 'arms',
    'bra√ßo': 'arms'
  };

  // GIFs demonstrativos por categoria muscular
  private readonly CATEGORY_GIFS: Record<string, ExerciseMedia> = {
    chest: {
      type: 'gif',
      url: 'https://i.gifer.com/7VsI.gif',
      alt: 'Exerc√≠cio de Peitoral - Demonstra√ß√£o dos movimentos b√°sicos',
      thumbnail: 'https://i.gifer.com/7VsI.gif'
    },
    back: {
      type: 'gif',
      url: 'https://i.gifer.com/QDg.gif',
      alt: 'Exerc√≠cio de Costas - Demonstra√ß√£o da t√©cnica correta',
      thumbnail: 'https://i.gifer.com/QDg.gif'
    },
    legs: {
      type: 'gif',
      url: 'https://i.gifer.com/7VsF.gif',
      alt: 'Exerc√≠cio de Pernas - Demonstra√ß√£o do movimento completo',
      thumbnail: 'https://i.gifer.com/7VsF.gif'
    },
    shoulders: {
      type: 'gif',
      url: 'https://i.gifer.com/7VsG.gif',
      alt: 'Exerc√≠cio de Ombros - Demonstra√ß√£o da amplitude correta',
      thumbnail: 'https://i.gifer.com/7VsG.gif'
    },
    arms: {
      type: 'gif',
      url: 'https://i.gifer.com/7VsH.gif',
      alt: 'Exerc√≠cio de Bra√ßos - Demonstra√ß√£o da execu√ß√£o perfeita',
      thumbnail: 'https://i.gifer.com/7VsH.gif'
    },
    general: {
      type: 'gif',
      url: 'https://i.gifer.com/7T4r.gif',
      alt: 'Demonstra√ß√£o de Exerc√≠cio - Forma e t√©cnica corretas',
      thumbnail: 'https://i.gifer.com/7T4r.gif'
    }
  };

  // Fallback final com GIF gen√©rico de exerc√≠cio
  private readonly FINAL_FALLBACK: ExerciseMedia = {
    type: 'gif',
    url: 'https://i.gifer.com/7T4r.gif',
    alt: 'Demonstra√ß√£o do Exerc√≠cio - Como executar corretamente',
    thumbnail: 'https://i.gifer.com/7T4r.gif'
  };
  
  async searchExerciseImages(exerciseName: string): Promise<ExerciseMedia[]> {
    const cacheKey = exerciseName.toLowerCase();
    
    if (this.exerciseCache.has(cacheKey)) {
      console.log(`üíæ Cache hit para demonstra√ß√£o: ${exerciseName}`);
      return this.exerciseCache.get(cacheKey)!;
    }
    
    console.log(`üé¨ Buscando GIF demonstrativo para: ${exerciseName}`);
    
    try {
      // 1. Busca exata no nome do exerc√≠cio
      const exactMatch = this.findExactGif(exerciseName);
      if (exactMatch) {
        console.log(`‚úÖ GIF espec√≠fico encontrado para: ${exerciseName}`);
        this.exerciseCache.set(cacheKey, exactMatch);
        return exactMatch;
      }
      
      // 2. Busca por palavra-chave no nome
      const keywordMatch = this.findKeywordGif(exerciseName);
      if (keywordMatch) {
        console.log(`‚úÖ GIF por palavra-chave encontrado para: ${exerciseName}`);
        this.exerciseCache.set(cacheKey, keywordMatch);
        return keywordMatch;
      }
      
      // 3. Busca por categoria muscular
      const category = this.getExerciseCategory(exerciseName);
      const categoryGif = this.CATEGORY_GIFS[category];
      if (categoryGif) {
        const result = [{
          ...categoryGif,
          alt: `${exerciseName} - ${categoryGif.alt}`
        }];
        
        console.log(`üìÇ Usando GIF de categoria (${category}) para: ${exerciseName}`);
        this.exerciseCache.set(cacheKey, result);
        return result;
      }
      
      // 4. Fallback final com GIF gen√©rico
      const finalResult = [{
        ...this.FINAL_FALLBACK,
        alt: `${exerciseName} - Demonstra√ß√£o da execu√ß√£o correta`
      }];
      
      console.log(`üÜò Usando GIF fallback para: ${exerciseName}`);
      this.exerciseCache.set(cacheKey, finalResult);
      return finalResult;
      
    } catch (error) {
      console.error(`‚ùå Erro ao buscar demonstra√ß√£o para ${exerciseName}:`, error);
      
      const errorResult = [{
        ...this.FINAL_FALLBACK,
        alt: `${exerciseName} - Demonstra√ß√£o da execu√ß√£o correta`
      }];
      
      this.exerciseCache.set(cacheKey, errorResult);
      return errorResult;
    }
  }
  
  private findExactGif(exerciseName: string): ExerciseMedia[] | null {
    const normalizedName = exerciseName.toLowerCase().trim();
    return this.EXERCISE_GIFS[normalizedName] || null;
  }
  
  private findKeywordGif(exerciseName: string): ExerciseMedia[] | null {
    const normalizedName = exerciseName.toLowerCase();
    
    // Busca por palavras-chave no nome do exerc√≠cio
    for (const [keyword, category] of Object.entries(this.KEYWORD_MAPPING)) {
      if (normalizedName.includes(keyword)) {
        console.log(`üîç Palavra-chave "${keyword}" encontrada para categoria: ${category}`);
        
        // Primeiro tenta encontrar um GIF espec√≠fico
        for (const [exerciseKey, gifs] of Object.entries(this.EXERCISE_GIFS)) {
          if (exerciseKey.includes(keyword)) {
            return gifs;
          }
        }
        
        // Se n√£o encontrou espec√≠fico, usa o GIF da categoria
        const categoryGif = this.CATEGORY_GIFS[category];
        if (categoryGif) {
          return [categoryGif];
        }
      }
    }
    
    return null;
  }
  
  private getExerciseCategory(exerciseName: string): string {
    const normalizedName = exerciseName.toLowerCase();
    
    // Busca por palavras-chave para determinar categoria
    for (const [keyword, category] of Object.entries(this.KEYWORD_MAPPING)) {
      if (normalizedName.includes(keyword)) {
        return category;
      }
    }
    
    return 'general';
  }
}

export const exerciseImageService = new ExerciseImageService();
